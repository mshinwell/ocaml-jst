;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(ocamllex
 (modules tsl_lexer)
 (mode fallback))

(ocamlyacc
 (modules tsl_parser)
 (mode fallback))

;; FIXME: handle UNIX_OR_WIN32 or something similar

(library
 (name ocamltest_core_and_plugin)
 (modes byte)
 (wrapped false)
<<<<<<< HEAD
 ; -linkall so we don't fail to include e.g. ocaml_modifiers.ml, which only
 ; has top-level side effects.
 (flags
  (:standard -linkall))
 (libraries
  ocamlcommon
  (select
   ocamltest_unix.ml
   from
   (unix -> ocamltest_unix.real.ml)
   (-> ocamltest_unix.dummy.ml)))
 (modules
  (:standard \ options main))
 (foreign_stubs
  (language c)
  (names run_unix run_stubs)
  (flags
   ((-DCAML_INTERNALS)
    (:include %{project_root}/oc_cflags.sexp)
    (:include %{project_root}/oc_cppflags.sexp)))))
||||||| 121bedcfd2
 (flags (:standard -nostdlib))
 (libraries ocamlcommon stdlib
  (select ocamltest_unix.ml from
   (unix -> ocamltest_unix_real.ml)
   (-> ocamltest_unix_dummy.ml)))
 (modules (:standard \ options main))
 (c_flags (-DCAML_INTERNALS -I%{project_root}/runtime)) ; fixme
 (c_names run_unix run_stubs))
=======
 (flags (:standard -nostdlib))
 (libraries ocamlcommon stdlib unix)
 (modules (:standard \ options main ocamltest_unix_dummy ocamltest_unix_real))
 (c_flags (-DCAML_INTERNALS -I%{project_root}/runtime)) ; fixme
 (c_names run_unix run_stubs))
>>>>>>> ocaml/trunk

(rule
 (targets empty.ml)
 (deps
  (source_tree ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml))
 (action
  (write-file %{targets} "(* hack *)")))

(executable
 (name main)
 (modes byte)
 (flags
  (:standard -cclib "-I../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}"))
 (modules options main)
 (libraries ocamltest_core_and_plugin))

(rule
 (copy main.exe ocamltest.byte))
